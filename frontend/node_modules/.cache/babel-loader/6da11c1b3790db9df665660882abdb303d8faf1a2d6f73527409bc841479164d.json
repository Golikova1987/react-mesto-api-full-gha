{"ast":null,"code":"import _defineProperty from\"C:/Users/User/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/User/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/User/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useState}from\"react\";export default function useFormValidation(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),isInputValid=_useState8[0],setIsInputValid=_useState8[1];//console.log(isValid)\nfunction handleChange(event){//console.log(event.target.form)\nvar name=event.target.name;var value=event.target.value;var validationMessage=event.target.validationMessage;var valid=event.target.validity.valid;var form=event.target.form;setValue(function(oldValue){return _objectSpread(_objectSpread({},oldValue),{},_defineProperty({},name,value));});setError(function(oldError){return _objectSpread(_objectSpread({},oldError),{},_defineProperty({},name,validationMessage));});setIsInputValid(function(oldIsInputValid){return _objectSpread(_objectSpread({},oldIsInputValid),{},_defineProperty({},name,valid));});setIsValid(form.checkValidity());}function reset(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setValue(data);setError({});setIsValid(false);setIsInputValid({});}var setValues=useCallback(function(name,value){setValue(function(oldValue){return _objectSpread(_objectSpread({},oldValue),{},_defineProperty({},name,value));});},[]);return{value:value,error:error,isValid:isValid,isInputValid:isInputValid,handleChange:handleChange,reset:reset,setValues:setValues};}","map":{"version":3,"names":["useCallback","useState","useFormValidation","_useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","error","setError","_useState5","_useState6","isValid","setIsValid","_useState7","_useState8","isInputValid","setIsInputValid","handleChange","event","name","target","validationMessage","valid","validity","form","oldValue","_objectSpread","_defineProperty","oldError","oldIsInputValid","checkValidity","reset","data","arguments","length","undefined","setValues"],"sources":["C:/Users/User/Desktop/dev/react-mesto-auth/src/utils/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nexport default function useFormValidation() {\r\n  const [value, setValue] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isInputValid, setIsInputValid] = useState({})\r\n  //console.log(isValid)\r\n\r\n  function handleChange(event) {\r\n    //console.log(event.target.form)\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    const validationMessage = event.target.validationMessage\r\n    const valid = event.target.validity.valid\r\n    const form = event.target.form\r\n\r\n    setValue((oldValue) => {\r\n      return { ...oldValue, [name] : value }\r\n    })\r\n\r\n    setError((oldError) => {\r\n      return { ...oldError, [name] : validationMessage }\r\n    })\r\n\r\n    setIsInputValid((oldIsInputValid) => {\r\n      return { ...oldIsInputValid, [name] : valid }\r\n    })\r\n\r\n    setIsValid(form.checkValidity())\r\n  }\r\n\r\n    function reset(data={}) {\r\n      setValue(data)\r\n      setError({})\r\n      setIsValid(false)\r\n      setIsInputValid({})\r\n    }\r\n\r\n    const setValues = useCallback((name, value) => {\r\n      setValue((oldValue) => {\r\n        return { ...oldValue, [name] : value }\r\n      })\r\n    },[])\r\n\r\n  return { value, error, isValid, isInputValid, handleChange, reset, setValues }\r\n\r\n}\r\n"],"mappings":"iYAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAE7C,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,IAAAC,SAAA,CAA0BF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAA0BP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAQ,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAA8BX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAwCf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAgB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA7CE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IACpC;AAEA,QAAS,CAAAG,YAAYA,CAACC,KAAK,CAAE,CAC3B;AACA,GAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACD,IAAI,CAC9B,GAAM,CAAAhB,KAAK,CAAGe,KAAK,CAACE,MAAM,CAACjB,KAAK,CAChC,GAAM,CAAAkB,iBAAiB,CAAGH,KAAK,CAACE,MAAM,CAACC,iBAAiB,CACxD,GAAM,CAAAC,KAAK,CAAGJ,KAAK,CAACE,MAAM,CAACG,QAAQ,CAACD,KAAK,CACzC,GAAM,CAAAE,IAAI,CAAGN,KAAK,CAACE,MAAM,CAACI,IAAI,CAE9BpB,QAAQ,CAAC,SAACqB,QAAQ,CAAK,CACrB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,QAAQ,KAAAE,eAAA,IAAGR,IAAI,CAAIhB,KAAK,GACtC,CAAC,CAAC,CAEFK,QAAQ,CAAC,SAACoB,QAAQ,CAAK,CACrB,OAAAF,aAAA,CAAAA,aAAA,IAAYE,QAAQ,KAAAD,eAAA,IAAGR,IAAI,CAAIE,iBAAiB,GAClD,CAAC,CAAC,CAEFL,eAAe,CAAC,SAACa,eAAe,CAAK,CACnC,OAAAH,aAAA,CAAAA,aAAA,IAAYG,eAAe,KAAAF,eAAA,IAAGR,IAAI,CAAIG,KAAK,GAC7C,CAAC,CAAC,CAEFV,UAAU,CAACY,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC,CAClC,CAEE,QAAS,CAAAC,KAAKA,CAAA,CAAU,IAAT,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAC,CAAC,CAAC,CACpB7B,QAAQ,CAAC4B,IAAI,CAAC,CACdxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACZI,UAAU,CAAC,KAAK,CAAC,CACjBI,eAAe,CAAC,CAAC,CAAC,CAAC,CACrB,CAEA,GAAM,CAAAoB,SAAS,CAAGvC,WAAW,CAAC,SAACsB,IAAI,CAAEhB,KAAK,CAAK,CAC7CC,QAAQ,CAAC,SAACqB,QAAQ,CAAK,CACrB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,QAAQ,KAAAE,eAAA,IAAGR,IAAI,CAAIhB,KAAK,GACtC,CAAC,CAAC,CACJ,CAAC,CAAC,EAAE,CAAC,CAEP,MAAO,CAAEA,KAAK,CAALA,KAAK,CAAEI,KAAK,CAALA,KAAK,CAAEI,OAAO,CAAPA,OAAO,CAAEI,YAAY,CAAZA,YAAY,CAAEE,YAAY,CAAZA,YAAY,CAAEc,KAAK,CAALA,KAAK,CAAEK,SAAS,CAATA,SAAU,CAAC,CAEhF"},"metadata":{},"sourceType":"module","externalDependencies":[]}