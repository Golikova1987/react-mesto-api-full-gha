{"ast":null,"code":"const baseUrl = \"https://auth.nomoreparties.co/\";\nfunction getResponseData(res) {\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`);\n}\nexport function registration(data) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: data.password,\n      email: data.email\n    })\n  }).then(res => getResponseData(res));\n}\nexport function authorization(data) {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: data.password,\n      email: data.email\n    }).then(res => getResponseData(res))\n  });\n}\nexport function getUsetData(token) {\n  return fetch(`${baseUrl}/user/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n}\n\n// const baseUrl = \"https://auth.nomoreparties.co/\";\n\n// function getResponseData(res) {\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\n// }\n\n// export function registration(password, email) {\n//   return fetch(`${baseUrl}/signup`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({\n//       password: password, \n//       email: email,\n//     })\n//   })\n//   .then(res => getResponseData(res))\n// }\n\n// export function authorization(password, email) {\n//   return fetch(`${baseUrl}/signin`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({\n//       password: password, \n//       email: email,\n//     })\n//     .then(res => getResponseData(res))\n//   })\n// }\n\n// export function getUsetData(token) {\n//   return fetch(`${baseUrl}/user/me`, {\n//   method: 'GET',\n//   headers: {\n//     'Content-Type': 'application/json',\n//     'Authorization': `Bearer ${token}`\n//   }\n//   })\n//   .then(res => getResponseData(res))\n// }","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","statusText","registration","data","fetch","method","headers","body","JSON","stringify","password","email","then","authorization","getUsetData","token"],"sources":["C:/Users/User/Desktop/dev/mesto-react/src/utils/auth.js"],"sourcesContent":["const baseUrl = \"https://auth.nomoreparties.co/\";\r\n\r\nfunction getResponseData(res) {\r\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n}\r\n\r\nexport function registration(data) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password, \r\n      email: data.email,\r\n    })\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\nexport function authorization(data) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password, \r\n      email: data.email,\r\n    })\r\n    .then(res => getResponseData(res))\r\n  })\r\n}\r\n\r\nexport function getUsetData(token) {\r\n  return fetch(`${baseUrl}/user/me`, {\r\n  method: 'GET',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${token}`\r\n  }\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\n\r\n\r\n\r\n// const baseUrl = \"https://auth.nomoreparties.co/\";\r\n\r\n// function getResponseData(res) {\r\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n// }\r\n\r\n// export function registration(password, email) {\r\n//   return fetch(`${baseUrl}/signup`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({\r\n//       password: password, \r\n//       email: email,\r\n//     })\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }\r\n\r\n// export function authorization(password, email) {\r\n//   return fetch(`${baseUrl}/signin`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({\r\n//       password: password, \r\n//       email: email,\r\n//     })\r\n//     .then(res => getResponseData(res))\r\n//   })\r\n// }\r\n\r\n// export function getUsetData(token) {\r\n//   return fetch(`${baseUrl}/user/me`, {\r\n//   method: 'GET',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     'Authorization': `Bearer ${token}`\r\n//   }\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }"],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;AAEhD,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,GAAEJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;AAChF;AAEA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EACjC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;MACvBC,KAAK,EAAER,IAAI,CAACQ;IACd,CAAC;EACH,CAAC,CAAC,CACDC,IAAI,CAACjB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;AAEA,OAAO,SAASkB,aAAaA,CAACV,IAAI,EAAE;EAClC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;MACvBC,KAAK,EAAER,IAAI,CAACQ;IACd,CAAC,CAAC,CACDC,IAAI,CAACjB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC;EACnC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASmB,WAAWA,CAACC,KAAK,EAAE;EACjC,OAAOX,KAAK,CAAE,GAAEX,OAAQ,UAAS,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASS,KAAM;IACnC;EACA,CAAC,CAAC,CACDH,IAAI,CAACjB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}