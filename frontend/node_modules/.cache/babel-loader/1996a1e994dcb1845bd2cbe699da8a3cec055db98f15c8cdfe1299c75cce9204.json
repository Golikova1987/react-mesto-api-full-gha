{"ast":null,"code":"const baseUrl = \"https://auth.nomoreparties.co\";\nconst getResponseData = res = {};\nexport function registration(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res));\n}\nexport function authorization(password, email) {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res)).then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n}\nexport function getUsetData(token) {\n  return fetch(`${baseUrl}/user/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n}\n\n// const baseUrl = \"https://auth.nomoreparties.co\"\n\n// function getResponseData(res) {\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\n// }\n\n// export function registration(password, email) {\n//   return fetch(`${baseUrl}/signup`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   })\n//   .then(res => getResponseData(res))\n// }\n\n// export function authorization(password, email) {\n//   return fetch(`${baseUrl}/signin`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   })\n//   .then(res => getResponseData(res))\n//   .then((data) => {\n//     if (data.token) {\n//       localStorage.setItem('jwt', data.token);\n//       return data;\n//     }\n//   })\n// }\n\n// export function getUsetData(token) {\n//   return fetch(`${baseUrl}/user/me`, {\n//   method: 'GET',\n//   headers: {\n//     'Content-Type': 'application/json',\n//     Authorization: `Bearer ${token}`,\n//   }\n//   })\n//   .then(res => getResponseData(res))\n// }","map":{"version":3,"names":["baseUrl","getResponseData","res","registration","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","data","token","localStorage","setItem","getUsetData","Authorization"],"sources":["C:/Users/User/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const baseUrl = \"https://auth.nomoreparties.co\"\r\n\r\nconst getResponseData = (res) = {\r\n  \r\n}\r\n\r\nexport function registration(password, email) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\nexport function authorization(password, email) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n  .then(res => getResponseData(res))\r\n  .then((data) => {\r\n    if (data.token) {\r\n      localStorage.setItem('jwt', data.token);\r\n      return data;\r\n    }\r\n  })\r\n}\r\n\r\nexport function getUsetData(token) {\r\n  return fetch(`${baseUrl}/user/me`, {\r\n  method: 'GET',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  }\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\n\r\n\r\n// const baseUrl = \"https://auth.nomoreparties.co\"\r\n\r\n// function getResponseData(res) {\r\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n// }\r\n\r\n// export function registration(password, email) {\r\n//   return fetch(`${baseUrl}/signup`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ email, password }),\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }\r\n\r\n// export function authorization(password, email) {\r\n//   return fetch(`${baseUrl}/signin`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ email, password }),\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n//   .then((data) => {\r\n//     if (data.token) {\r\n//       localStorage.setItem('jwt', data.token);\r\n//       return data;\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function getUsetData(token) {\r\n//   return fetch(`${baseUrl}/user/me`, {\r\n//   method: 'GET',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     Authorization: `Bearer ${token}`,\r\n//   }\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+BAA+B;AAE/C,MAAMC,eAAe,GAAIC,GAAG,GAAI,CAEhC,CAAC;AAED,OAAO,SAASC,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAC5C,OAAOC,KAAK,CAAE,GAAEN,OAAQ,SAAQ,EAAE;IAChCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CACDQ,IAAI,CAACV,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;AAEA,OAAO,SAASW,aAAaA,CAACT,QAAQ,EAAEC,KAAK,EAAE;EAC7C,OAAOC,KAAK,CAAE,GAAEN,OAAQ,SAAQ,EAAE;IAChCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CACDQ,IAAI,CAACV,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC,CACjCU,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,KAAK,CAAC;MACvC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,WAAWA,CAACH,KAAK,EAAE;EACjC,OAAOT,KAAK,CAAE,GAAEN,OAAQ,UAAS,EAAE;IACnCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCW,aAAa,EAAG,UAASJ,KAAM;IACjC;EACA,CAAC,CAAC,CACDH,IAAI,CAACV,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}