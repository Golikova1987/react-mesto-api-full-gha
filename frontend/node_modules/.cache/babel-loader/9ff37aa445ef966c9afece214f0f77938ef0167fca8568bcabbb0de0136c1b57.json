{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import useFormValidation from\"../../utils/useFormValidation.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Register(_ref){var handleRegister=_ref.handleRegister;var _useFormValidation=useFormValidation(),value=_useFormValidation.value,error=_useFormValidation.error,isInputValid=_useFormValidation.isInputValid,reset=_useFormValidation.reset,handleChange=_useFormValidation.handleChange;function handleSubmit(event){event.preventDefault();handleRegister({email:value.email,password:value.password},reset);}return/*#__PURE__*/_jsxs(\"div\",{className:\"auth\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"auth__title\",children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"auth__form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"popup__input \".concat(isInputValid.email===undefined||isInputValid.email?'':'popup__input_error'),name:\"email\",type:\"email\",placeholder:\"Email\",onChange:handleChange,value:value.email?value.email:\"\",minLength:2,maxLength:40,required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__error\",children:error.email}),/*#__PURE__*/_jsx(\"input\",{className:\"popup__input \".concat(isInputValid.password===undefined||isInputValid.password?'':'popup__input_error'),type:\"password\",name:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",minLength:2,maxLength:200,required:true,onChange:handleChange,value:value.password?value.password:\"\"}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__error\",children:error.password}),/*#__PURE__*/_jsx(\"button\",{className:\"auth__submit\",type:\"submit\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"})]}),/*#__PURE__*/_jsx(Link,{className:\"auth__link\",to:\"/sign-in\",children:\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \\u0412\\u043E\\u0439\\u0442\\u0438\"})]});}// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// // import useFormValidation from \"../../utils/useFormValidation.js\";\n// export default function Register({ onRegister }) {\n//   // const { value, error, isValid, isInputValid } = useFormValidation();\n//   // const [email, setEmail] = useState(\"\");\n//   // const [password, setPassword] = useState(\"\");\n//   // function handleChangeEmail(e) {\n//   //   setEmail(e.target.value);\n//   // }\n//   // function handleChangePassword(e) {\n//   //   setPassword(e.target.value);\n//   // }\n//   // function handleSubmit(e) {\n//   //   e.preventDefault();\n//   //   handleRegister(email, password);\n//   // }\n//   const [registerData, setRegisterData] = useState({\n//     email: '',\n//     password: '',\n//   })\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setRegisterData({\n//       ...registerData,\n//       [name]: value,\n//     })\n//   }\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     onRegister(registerData);\n//   }\n//   return (\n//     <div className=\"auth\">\n//       <h2 className=\"auth__title\">Регистрация</h2>\n//       <form className=\"auth__form\" \n//         onSubmit={handleSubmit} \n//         // isValid={isValid}\n//         >\n//         <input\n//           className=\"auth__input\"\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           onChange={handleChange}\n//           value={registerData.email}\n//           minLength=\"2\"\n//           maxLength=\"40\"\n//           // isInputValid={isInputValid.email}\n//           // error={error.email}\n//           required\n//         />\n//         <input\n//           className=\"auth__input\"\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Пароль\"\n//           minLength=\"5\"\n//           maxLength=\"200\"\n//           required\n//           onChange={handleChange}\n//           value={registerData.password}\n//           // error={error.password}\n//           // isInputValid={isInputValid.password}\n//         />\n//         <button className=\"auth__submit\" type=\"submit\" onSubmit={handleSubmit}>\n//           Зарегистрироваться\n//         </button>\n//       </form>\n//       <Link className=\"auth__link\" to=\"/sign-in\">\n//         Уже зарегистрированы? Войти\n//       </Link>\n//     </div>\n//   );\n// }","map":{"version":3,"names":["React","Link","useFormValidation","jsx","_jsx","jsxs","_jsxs","Register","_ref","handleRegister","_useFormValidation","value","error","isInputValid","reset","handleChange","handleSubmit","event","preventDefault","email","password","className","children","onSubmit","concat","undefined","name","type","placeholder","onChange","minLength","maxLength","required","to"],"sources":["C:/Users/User/Desktop/dev/react-mesto-auth/src/components/Register/Register.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFormValidation from \"../../utils/useFormValidation.js\";\r\n\r\nexport default function Register({ handleRegister }) {\r\n  const { value, error, isInputValid, reset, handleChange } = useFormValidation();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    handleRegister({\r\n      email: value.email,\r\n      password: value.password\r\n    }, reset)\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <h2 className=\"auth__title\">Регистрация</h2>\r\n      <form className=\"auth__form\" \r\n        onSubmit={handleSubmit} \r\n        >\r\n        <input\r\n          className={`popup__input ${isInputValid.email === undefined || isInputValid.email ? '' : 'popup__input_error'}`}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={handleChange}\r\n          value={value.email ? value.email : \"\"}\r\n          minLength={2}\r\n          maxLength={40}\r\n          required\r\n        />\r\n        <span className=\"popup__error\">{error.email}</span>\r\n        <input\r\n          className={`popup__input ${isInputValid.password === undefined || isInputValid.password ? '' : 'popup__input_error'}`}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Пароль\"\r\n          minLength={2}\r\n          maxLength={200}\r\n          required\r\n          onChange={handleChange}\r\n          value={value.password ? value.password : \"\"}\r\n        />\r\n        <span className=\"popup__error\">{error.password}</span>\r\n        <button className=\"auth__submit\" type=\"submit\">\r\n          Зарегистрироваться\r\n        </button>\r\n      </form>\r\n      <Link className=\"auth__link\" to=\"/sign-in\">\r\n        Уже зарегистрированы? Войти\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// // import useFormValidation from \"../../utils/useFormValidation.js\";\r\n\r\n// export default function Register({ onRegister }) {\r\n//   // const { value, error, isValid, isInputValid } = useFormValidation();\r\n\r\n//   // const [email, setEmail] = useState(\"\");\r\n//   // const [password, setPassword] = useState(\"\");\r\n\r\n//   // function handleChangeEmail(e) {\r\n//   //   setEmail(e.target.value);\r\n//   // }\r\n\r\n//   // function handleChangePassword(e) {\r\n//   //   setPassword(e.target.value);\r\n//   // }\r\n\r\n//   // function handleSubmit(e) {\r\n//   //   e.preventDefault();\r\n\r\n//   //   handleRegister(email, password);\r\n//   // }\r\n\r\n//   const [registerData, setRegisterData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   })\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setRegisterData({\r\n//       ...registerData,\r\n//       [name]: value,\r\n//     })\r\n//   }\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     onRegister(registerData);\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"auth\">\r\n//       <h2 className=\"auth__title\">Регистрация</h2>\r\n//       <form className=\"auth__form\" \r\n//         onSubmit={handleSubmit} \r\n//         // isValid={isValid}\r\n//         >\r\n//         <input\r\n//           className=\"auth__input\"\r\n//           name=\"email\"\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           onChange={handleChange}\r\n//           value={registerData.email}\r\n//           minLength=\"2\"\r\n//           maxLength=\"40\"\r\n//           // isInputValid={isInputValid.email}\r\n//           // error={error.email}\r\n//           required\r\n//         />\r\n//         <input\r\n//           className=\"auth__input\"\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Пароль\"\r\n//           minLength=\"5\"\r\n//           maxLength=\"200\"\r\n//           required\r\n//           onChange={handleChange}\r\n//           value={registerData.password}\r\n//           // error={error.password}\r\n//           // isInputValid={isInputValid.password}\r\n//         />\r\n//         <button className=\"auth__submit\" type=\"submit\" onSubmit={handleSubmit}>\r\n//           Зарегистрироваться\r\n//         </button>\r\n//       </form>\r\n//       <Link className=\"auth__link\" to=\"/sign-in\">\r\n//         Уже зарегистрированы? Войти\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}