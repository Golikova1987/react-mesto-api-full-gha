{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nexport default function useFormValidation() {\n  _s();\n  const [value, setValue] = useState({});\n  const [error, setError] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [isInputValid, setIsInputValid] = useState({});\n  //console.log(isValid)\n\n  function handleChange(event) {\n    //console.log(event.target.form)\n    const name = event.target.name;\n    const value = event.target.value;\n    const validationMessage = event.target.validationMessage;\n    const valid = event.target.validity.valid;\n    const form = event.target.form;\n    setValue(oldValue => {\n      return {\n        ...oldValue,\n        [name]: value\n      };\n    });\n    setError(oldError => {\n      return {\n        ...oldError,\n        [name]: validationMessage\n      };\n    });\n    setIsInputValid(oldIsInputValid => {\n      return {\n        ...oldIsInputValid,\n        [name]: valid\n      };\n    });\n\n    // setIsValid(form.checkValidity());\n  }\n\n  function reset() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setValue(data);\n    setError({});\n    setIsValid(false);\n    setIsInputValid({});\n  }\n  const setValues = useCallback((name, value) => {\n    setValue(oldValue => {\n      return {\n        ...oldValue,\n        [name]: value\n      };\n    });\n  }, []);\n  return {\n    value,\n    error,\n    isValid,\n    isInputValid,\n    handleChange,\n    reset,\n    setValues\n  };\n}\n_s(useFormValidation, \"jR5+vYg4B0T4ff8O7oUKGuAH8UA=\");","map":{"version":3,"names":["useCallback","useState","useFormValidation","_s","value","setValue","error","setError","isValid","setIsValid","isInputValid","setIsInputValid","handleChange","event","name","target","validationMessage","valid","validity","form","oldValue","oldError","oldIsInputValid","reset","data","arguments","length","undefined","setValues"],"sources":["C:/Users/User/Desktop/dev/mesto-react/src/utils/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nexport default function useFormValidation() {\r\n  const [value, setValue] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isInputValid, setIsInputValid] = useState({})\r\n  //console.log(isValid)\r\n\r\n  function handleChange(event) {\r\n    //console.log(event.target.form)\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    const validationMessage = event.target.validationMessage\r\n    const valid = event.target.validity.valid\r\n    const form = event.target.form\r\n\r\n    setValue((oldValue) => {\r\n      return { ...oldValue, [name] : value }\r\n    })\r\n\r\n    setError((oldError) => {\r\n      return { ...oldError, [name] : validationMessage }\r\n    })\r\n\r\n    setIsInputValid((oldIsInputValid) => {\r\n      return { ...oldIsInputValid, [name] : valid }\r\n    })\r\n\r\n    // setIsValid(form.checkValidity());\r\n  }\r\n\r\n    function reset(data={}) {\r\n      setValue(data)\r\n      setError({})\r\n      setIsValid(false)\r\n      setIsInputValid({})\r\n    }\r\n\r\n    const setValues = useCallback((name, value) => {\r\n      setValue((oldValue) => {\r\n        return { ...oldValue, [name] : value }\r\n      })\r\n    },[])\r\n\r\n  return { value, error, isValid, isInputValid, handleChange, reset, setValues }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD;;EAEA,SAASW,YAAYA,CAACC,KAAK,EAAE;IAC3B;IACA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAMV,KAAK,GAAGS,KAAK,CAACE,MAAM,CAACX,KAAK;IAChC,MAAMY,iBAAiB,GAAGH,KAAK,CAACE,MAAM,CAACC,iBAAiB;IACxD,MAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAM,CAACG,QAAQ,CAACD,KAAK;IACzC,MAAME,IAAI,GAAGN,KAAK,CAACE,MAAM,CAACI,IAAI;IAE9Bd,QAAQ,CAAEe,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACN,IAAI,GAAIV;MAAM,CAAC;IACxC,CAAC,CAAC;IAEFG,QAAQ,CAAEc,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACP,IAAI,GAAIE;MAAkB,CAAC;IACpD,CAAC,CAAC;IAEFL,eAAe,CAAEW,eAAe,IAAK;MACnC,OAAO;QAAE,GAAGA,eAAe;QAAE,CAACR,IAAI,GAAIG;MAAM,CAAC;IAC/C,CAAC,CAAC;;IAEF;EACF;;EAEE,SAASM,KAAKA,CAAA,EAAU;IAAA,IAATC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IACpBpB,QAAQ,CAACmB,IAAI,CAAC;IACdjB,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZE,UAAU,CAAC,KAAK,CAAC;IACjBE,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB;EAEA,MAAMiB,SAAS,GAAG5B,WAAW,CAAC,CAACc,IAAI,EAAEV,KAAK,KAAK;IAC7CC,QAAQ,CAAEe,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACN,IAAI,GAAIV;MAAM,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEP,OAAO;IAAEA,KAAK;IAAEE,KAAK;IAAEE,OAAO;IAAEE,YAAY;IAAEE,YAAY;IAAEW,KAAK;IAAEK;EAAU,CAAC;AAEhF;AAACzB,EAAA,CA7CuBD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}