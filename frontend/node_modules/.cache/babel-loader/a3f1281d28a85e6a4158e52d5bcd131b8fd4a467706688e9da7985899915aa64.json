{"ast":null,"code":"\n\n// import Header from \"./Header/Header.jsx\";\n// import Main from \"./Main/Main.jsx\";\n// import Footer from \"./Footer/Footer.jsx\";\n// import PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\n// import ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\n// import { useCallback, useState, useEffect } from \"react\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n// import api from \"../utils/api.js\";\n// import EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\n// import EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\n// import AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\n\n// import { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\n// import Login from \"./Login/Login.jsx\";\n// import Register from \"./Register/Register.jsx\";\n// import ProtectedRoute from \"./ProtectedRoute/ProtectedRoute.jsx\";\n// import { registration, authorization, getUsetData } from \"../utils/auth.js\";\n// import InfoTooltip from \"./InfoTooltip/InfoTooltip.jsx\";\n\n// function App() {\n//   const navigate = useNavigate();\n\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//   const [selectedCard, setSelectedCard] = useState({});\n//   const [isImagePopup, setIsImagePopup] = useState(false);\n//   const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n//   const [isLoadingSubmit, setIsLoadingSubmit] = useState(false);\n\n//   const [currentUser, setCurrentUser] = useState({});\n//   const [cards, setCards] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [deleteCard, setDeleteCard] = useState('');\n\n//   const [loggedIn, setLoggedIn] = useState(false);\n//   const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n//   const [isSuccess, setIsSuccess] = useState(false);\n//   const [email, setEmail] = useState('');\n//   const [isCheckToken, setIsCheckToken] = useState(true);\n\n//   const setStatesCloseAllPopups = useCallback(() => {\n//     setIsEditAvatarPopupOpen(false);\n//     setIsEditProfilePopupOpen(false);\n//     setIsAddPlacePopupOpen(false);\n//     setIsImagePopup(false);\n//     setIsDeleteCardPopupOpen(false);\n//     setIsInfoTooltipOpen(false);\n//   }, []);\n\n//   const closePopupOnEsc = useCallback(\n//     (event) => {\n//       if (event.key === \"Escape\") {\n//         setStatesCloseAllPopups();\n//         document.removeEventListener(\"keydown\", closePopupOnEsc);\n//       }\n//     },\n//     [setStatesCloseAllPopups]\n//   );\n\n//   const closeAllPopups = useCallback(() => {\n//     setStatesCloseAllPopups();\n//     document.removeEventListener(\"keydown\", closePopupOnEsc);\n//   }, [setStatesCloseAllPopups, closePopupOnEsc]);\n\n//   function handleEditAvatarClick() {\n//     setIsEditAvatarPopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleEditProfileClick() {\n//     setIsEditProfilePopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleAddPlaceClick() {\n//     setIsAddPlacePopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleCardClick(card) {\n//     setSelectedCard(card);\n//     setIsImagePopup(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleCardDelete(cardId) {\n//     setDeleteCard(cardId);\n//     setIsDeleteCardPopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function setEvantListenersDocument() {\n//     document.addEventListener(\"keydown\", closePopupOnEsc);\n//   }\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     Promise.all([api.getInfo(), api.getInitialCards()])\n//       .then(([user, cards]) => {\n//         setCurrentUser(user);\n//         setCards(cards);\n//         setIsLoading(false);\n//       })\n//       .catch((err) => console.error(`Ошибка при загрузке ${err}`));\n//   }, []);\n\n//   useEffect(() => {\n//     if (localStorage.jwt) {\n//       getUsetData(localStorage.jwt)\n//         .then(res => {\n//           console.log(res)\n//           setEmail(res.data.email)\n//           setLoggedIn(true)\n//           setIsCheckToken(false)\n//           navigate('/')\n//         })\n//         .catch(err => console.error(`Ошибка авторизации при повторном входе ${err}`))  \n//       } else {\n//         setLoggedIn(false)\n//         setIsCheckToken(false)\n//       }    \n//   }, [navigate])\n\n//   function handleDeleteCardSubmit(event) {\n//     event.preventDefault();\n//     setIsLoadingSubmit(true);\n//     api\n//       .deleteCard(deleteCard)\n//       .then(() => {\n//         setCards(\n//           cards.filter((card) => {\n//             return card._id !== deleteCard;\n//           })\n//         );\n//         closeAllPopups();\n//         setIsLoadingSubmit(false);\n//       })\n//       .catch((err) => console.error(`Ошибка удаления карточки ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleUpdateUser(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api\n//       .setUserInfo(data)\n//       .then((res) => {\n//         setCurrentUser(res)\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка редактирования профиля ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleUpdateAvatar(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api.setAvatar(data)\n//       .then(res => {\n//         setCurrentUser(res)\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка редактирования аватара ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleAddPlaceSubmit(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api.addCard(data)\n//       .then(res => {\n//         setCards([res, ...cards])\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка добавления карточки ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleRegister(password, email) {\n//     setIsLoading(true)\n//     registration(password, email)\n//       .then(() => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(true)\n//         window.scrollTo(0, 0)\n//         navigate('/sing-in')\n//       })\n//       .catch((err) => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(false)\n//         console.error(`Ошибка регистрации ${err}`)\n//       })\n//       .finally(() => setIsLoading(false))\n//   } \n\n//   function handleLogin(password, email) {\n//     setIsLoading(true)\n//     authorization(password, email)\n//       .then(res => {\n//         console.log(res)\n//         localStorage.setItem('jwt', res.token)\n//         setLoggedIn(true)\n//         window.scrollTo(0, 0)\n//         navigate('/')\n//       })\n//       .catch(err => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(false)\n//         console.error(`Ошибка авторизации ${err}`)\n//       })\n//       .finally(() => setIsLoading(false))\n//     }\n\n//     function handleLogout() {\n//       setLoggedIn(false)\n//       setEmail('')\n//       navigate('/sind-in')\n//       localStorage.removeItem('jwt')\n//     }\n\n//   return (\n//     <CurrentUserContext.Provider value={currentUser}>\n//       <div className=\"page__container\">\n//         <Header \n//           email={email}\n//           loggedIn={loggedIn}\n//           onLogout={handleLogout}\n//         />\n\n//         <Routes>\n//           <Route path=\"/\" element={<ProtectedRoute\n//             element={Main}\n//             loggedIn={loggedIn}\n//             cards={cards}\n//             onEditProfile={handleEditProfileClick}\n//             onAddPlace={handleAddPlaceClick}\n//             onEditAvatar={handleEditAvatarClick}\n//             onCardClick={handleCardClick}\n//             onCardDelete={handleCardDelete}\n//             isLoading={isLoading}\n//           />\n//           }/>\n//           <Route \n//             path=\"/sign-in\" \n//             element={<Login onLogin={handleLogin}/>}\n//             />\n//           <Route \n//             path=\"/sign-up\" \n//             element={<Register onRegister={handleRegister} />} \n//             />\n//           <Route \n//             path=\"*\" \n//             element={<Navigate to=\"/\" replace/>}  \n//             />\n//         </Routes>\n\n//         {/* <Main\n//           onEditProfile={handleEditProfileClick}\n//           onAddPlace={handleAddPlaceClick}\n//           onEditAvatar={handleEditAvatarClick}\n//           onCardClick={handleCardClick}\n//           onCardDelete={handleCardDelete}\n//           cards={cards}\n//           isLoading={isLoading}\n//         /> */}\n\n//         <Footer />\n\n//         <EditProfilePopup\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//           onUpdateUser={handleUpdateUser}\n//           isLoadingSubmit={isLoadingSubmit}\n//         />\n\n//         <AddPlacePopup\n//           onClose={closeAllPopups}\n//           isLoadingSubmit={isLoadingSubmit}\n//           isOpen={isAddPlacePopupOpen}\n//           onAddPlace={handleAddPlaceSubmit}\n//         />\n\n//         <EditAvatarPopup\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//           isLoadingSubmit={isLoadingSubmit}\n//           onUpdateAvatar={handleUpdateAvatar}\n//         />\n\n//         <PopupWithForm\n//           name=\"delete-card\"\n//           title=\"Вы уверены?\"\n//           button=\"Да\"\n//           isOpen={isDeleteCardPopupOpen}\n//           onClose={closeAllPopups}\n//           onSubmit={handleDeleteCardSubmit}\n//           isLoadingSubmit={isLoadingSubmit}\n//         />\n\n//         <ImagePopup\n//           card={selectedCard}\n//           isOpen={isImagePopup}\n//           onClose={closeAllPopups}\n//         />\n\n//         <InfoTooltip\n//           isOpen={isInfoTooltipOpen}\n//           onClose={closeAllPopups}\n//           isSuccess={isSuccess}\n//         />\n//       </div>\n//     </CurrentUserContext.Provider>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/dev/mesto-react/src/components/App.jsx"],"sourcesContent":["\n\n\n\n\n\n\n\n// import Header from \"./Header/Header.jsx\";\n// import Main from \"./Main/Main.jsx\";\n// import Footer from \"./Footer/Footer.jsx\";\n// import PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\n// import ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\n// import { useCallback, useState, useEffect } from \"react\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n// import api from \"../utils/api.js\";\n// import EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\n// import EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\n// import AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\n\n// import { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\n// import Login from \"./Login/Login.jsx\";\n// import Register from \"./Register/Register.jsx\";\n// import ProtectedRoute from \"./ProtectedRoute/ProtectedRoute.jsx\";\n// import { registration, authorization, getUsetData } from \"../utils/auth.js\";\n// import InfoTooltip from \"./InfoTooltip/InfoTooltip.jsx\";\n\n// function App() {\n//   const navigate = useNavigate();\n\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//   const [selectedCard, setSelectedCard] = useState({});\n//   const [isImagePopup, setIsImagePopup] = useState(false);\n//   const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n//   const [isLoadingSubmit, setIsLoadingSubmit] = useState(false);\n\n//   const [currentUser, setCurrentUser] = useState({});\n//   const [cards, setCards] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [deleteCard, setDeleteCard] = useState('');\n\n//   const [loggedIn, setLoggedIn] = useState(false);\n//   const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n//   const [isSuccess, setIsSuccess] = useState(false);\n//   const [email, setEmail] = useState('');\n//   const [isCheckToken, setIsCheckToken] = useState(true);\n\n//   const setStatesCloseAllPopups = useCallback(() => {\n//     setIsEditAvatarPopupOpen(false);\n//     setIsEditProfilePopupOpen(false);\n//     setIsAddPlacePopupOpen(false);\n//     setIsImagePopup(false);\n//     setIsDeleteCardPopupOpen(false);\n//     setIsInfoTooltipOpen(false);\n//   }, []);\n\n//   const closePopupOnEsc = useCallback(\n//     (event) => {\n//       if (event.key === \"Escape\") {\n//         setStatesCloseAllPopups();\n//         document.removeEventListener(\"keydown\", closePopupOnEsc);\n//       }\n//     },\n//     [setStatesCloseAllPopups]\n//   );\n\n//   const closeAllPopups = useCallback(() => {\n//     setStatesCloseAllPopups();\n//     document.removeEventListener(\"keydown\", closePopupOnEsc);\n//   }, [setStatesCloseAllPopups, closePopupOnEsc]);\n\n//   function handleEditAvatarClick() {\n//     setIsEditAvatarPopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleEditProfileClick() {\n//     setIsEditProfilePopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleAddPlaceClick() {\n//     setIsAddPlacePopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleCardClick(card) {\n//     setSelectedCard(card);\n//     setIsImagePopup(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function handleCardDelete(cardId) {\n//     setDeleteCard(cardId);\n//     setIsDeleteCardPopupOpen(true);\n//     setEvantListenersDocument();\n//   }\n\n//   function setEvantListenersDocument() {\n//     document.addEventListener(\"keydown\", closePopupOnEsc);\n//   }\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     Promise.all([api.getInfo(), api.getInitialCards()])\n//       .then(([user, cards]) => {\n//         setCurrentUser(user);\n//         setCards(cards);\n//         setIsLoading(false);\n//       })\n//       .catch((err) => console.error(`Ошибка при загрузке ${err}`));\n//   }, []);\n\n//   useEffect(() => {\n//     if (localStorage.jwt) {\n//       getUsetData(localStorage.jwt)\n//         .then(res => {\n//           console.log(res)\n//           setEmail(res.data.email)\n//           setLoggedIn(true)\n//           setIsCheckToken(false)\n//           navigate('/')\n//         })\n//         .catch(err => console.error(`Ошибка авторизации при повторном входе ${err}`))  \n//       } else {\n//         setLoggedIn(false)\n//         setIsCheckToken(false)\n//       }    \n//   }, [navigate])\n\n//   function handleDeleteCardSubmit(event) {\n//     event.preventDefault();\n//     setIsLoadingSubmit(true);\n//     api\n//       .deleteCard(deleteCard)\n//       .then(() => {\n//         setCards(\n//           cards.filter((card) => {\n//             return card._id !== deleteCard;\n//           })\n//         );\n//         closeAllPopups();\n//         setIsLoadingSubmit(false);\n//       })\n//       .catch((err) => console.error(`Ошибка удаления карточки ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleUpdateUser(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api\n//       .setUserInfo(data)\n//       .then((res) => {\n//         setCurrentUser(res)\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка редактирования профиля ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleUpdateAvatar(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api.setAvatar(data)\n//       .then(res => {\n//         setCurrentUser(res)\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка редактирования аватара ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleAddPlaceSubmit(data, reset) {\n//     setIsLoadingSubmit(true)\n//     api.addCard(data)\n//       .then(res => {\n//         setCards([res, ...cards])\n//         closeAllPopups()\n//         reset()\n//         setIsLoadingSubmit(false)\n//       })\n//       .catch((err) => console.error(`Ошибка добавления карточки ${err}`))\n//       .finally(() => setIsLoadingSubmit(false))\n//   }\n\n//   function handleRegister(password, email) {\n//     setIsLoading(true)\n//     registration(password, email)\n//       .then(() => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(true)\n//         window.scrollTo(0, 0)\n//         navigate('/sing-in')\n//       })\n//       .catch((err) => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(false)\n//         console.error(`Ошибка регистрации ${err}`)\n//       })\n//       .finally(() => setIsLoading(false))\n//   } \n  \n//   function handleLogin(password, email) {\n//     setIsLoading(true)\n//     authorization(password, email)\n//       .then(res => {\n//         console.log(res)\n//         localStorage.setItem('jwt', res.token)\n//         setLoggedIn(true)\n//         window.scrollTo(0, 0)\n//         navigate('/')\n//       })\n//       .catch(err => {\n//         setIsInfoTooltipOpen(true)\n//         setIsSuccess(false)\n//         console.error(`Ошибка авторизации ${err}`)\n//       })\n//       .finally(() => setIsLoading(false))\n//     }\n\n//     function handleLogout() {\n//       setLoggedIn(false)\n//       setEmail('')\n//       navigate('/sind-in')\n//       localStorage.removeItem('jwt')\n//     }\n\n//   return (\n//     <CurrentUserContext.Provider value={currentUser}>\n//       <div className=\"page__container\">\n//         <Header \n//           email={email}\n//           loggedIn={loggedIn}\n//           onLogout={handleLogout}\n//         />\n\n//         <Routes>\n//           <Route path=\"/\" element={<ProtectedRoute\n//             element={Main}\n//             loggedIn={loggedIn}\n//             cards={cards}\n//             onEditProfile={handleEditProfileClick}\n//             onAddPlace={handleAddPlaceClick}\n//             onEditAvatar={handleEditAvatarClick}\n//             onCardClick={handleCardClick}\n//             onCardDelete={handleCardDelete}\n//             isLoading={isLoading}\n//           />\n//           }/>\n//           <Route \n//             path=\"/sign-in\" \n//             element={<Login onLogin={handleLogin}/>}\n//             />\n//           <Route \n//             path=\"/sign-up\" \n//             element={<Register onRegister={handleRegister} />} \n//             />\n//           <Route \n//             path=\"*\" \n//             element={<Navigate to=\"/\" replace/>}  \n//             />\n//         </Routes>\n\n//         {/* <Main\n//           onEditProfile={handleEditProfileClick}\n//           onAddPlace={handleAddPlaceClick}\n//           onEditAvatar={handleEditAvatarClick}\n//           onCardClick={handleCardClick}\n//           onCardDelete={handleCardDelete}\n//           cards={cards}\n//           isLoading={isLoading}\n//         /> */}\n\n//         <Footer />\n\n//         <EditProfilePopup\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//           onUpdateUser={handleUpdateUser}\n//           isLoadingSubmit={isLoadingSubmit}\n//         />\n\n//         <AddPlacePopup\n//           onClose={closeAllPopups}\n//           isLoadingSubmit={isLoadingSubmit}\n//           isOpen={isAddPlacePopupOpen}\n//           onAddPlace={handleAddPlaceSubmit}\n//         />\n\n\n//         <EditAvatarPopup\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//           isLoadingSubmit={isLoadingSubmit}\n//           onUpdateAvatar={handleUpdateAvatar}\n//         />\n\n//         <PopupWithForm\n//           name=\"delete-card\"\n//           title=\"Вы уверены?\"\n//           button=\"Да\"\n//           isOpen={isDeleteCardPopupOpen}\n//           onClose={closeAllPopups}\n//           onSubmit={handleDeleteCardSubmit}\n//           isLoadingSubmit={isLoadingSubmit}\n//         />\n\n//         <ImagePopup\n//           card={selectedCard}\n//           isOpen={isImagePopup}\n//           onClose={closeAllPopups}\n//         />\n\n//         <InfoTooltip\n//           isOpen={isInfoTooltipOpen}\n//           onClose={closeAllPopups}\n//           isSuccess={isSuccess}\n//         />\n//       </div>\n//     </CurrentUserContext.Provider>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}