{"ast":null,"code":"import _classCallCheck from\"C:/Users/User/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/User/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._authorization=options.headers.authorization;}//Проверка ответа сервера и преобразование из json\n_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}//загрузка карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._authorization}}).then(this._getResponseData);}//загрузкам информации о пользователе с сервера\n},{key:\"getInfo\",value:function getInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._authorization}}).then(this._getResponseData);}//сохранение отредактированного профиля на сервере\n},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.description})}).then(this._getResponseData);}//обновление аватара\n},{key:\"setAvatar\",value:function setAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._getResponseData);}//добавление новой карточки\n},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.mesto,link:data.link})}).then(this._getResponseData);}//постановка лайка\n},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:{authorization:this._authorization}}).then(this._getResponseData);}//удаление лайка\n},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:{authorization:this._authorization}}).then(this._getResponseData);}//удаление карточек\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:this._authorization}}).then(this._getResponseData);}}]);return Api;}();//создание экземпляра класса Api\nvar api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-66\",headers:{authorization:\"4794d416-5184-43be-8376-438ba82ab5d1\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_authorization","authorization","_createClass","key","value","_getResponseData","res","ok","Promise","reject","concat","status","json","getInitialCards","fetch","then","getInfo","setUserInfo","data","method","body","JSON","stringify","name","about","description","setAvatar","avatar","addCard","mesto","link","addLike","cardId","deleteLike","deleteCard","api"],"sources":["C:/Users/User/Desktop/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n    this._headers = options.headers;\r\n    this._authorization = options.headers.authorization;\r\n  }\r\n//Проверка ответа сервера и преобразование из json\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`); \r\n    }\r\n    return res.json();\r\n}\r\n//загрузка карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: {\r\n        authorization: this._authorization,\r\n      }\r\n   })\r\n   .then(this._getResponseData)\r\n  }\r\n//загрузкам информации о пользователе с сервера\r\n  getInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//сохранение отредактированного профиля на сервере\r\n  setUserInfo(data) { \r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.description,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//обновление аватара\r\n  setAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//добавление новой карточки\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.mesto,\r\n        link: data.link,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//постановка лайка\r\n  addLike(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      } \r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n  //удаление лайка\r\n  deleteLike(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      } \r\n    })\r\n    .then(this._getResponseData) \r\n  }\r\n//удаление карточек\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n\r\n}\r\n//создание экземпляра класса Api\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\r\n  headers: {\r\n    authorization: \"4794d416-5184-43be-8376-438ba82ab5d1\",\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}