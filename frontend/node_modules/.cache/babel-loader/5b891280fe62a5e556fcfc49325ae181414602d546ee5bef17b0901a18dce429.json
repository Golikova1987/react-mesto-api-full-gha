{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  //Проверка ответа сервера и преобразование из json\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  //загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  //загрузкам информации о пользователе с сервера\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  //сохранение отредактированного профиля на сервере\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.description\n      })\n    }).then(this._getResponseData);\n  }\n  //обновление аватара\n  setAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponseData);\n  }\n  //добавление новой карточки\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.mesto,\n        link: data.link\n      })\n    }).then(this._getResponseData);\n  }\n  //постановка лайка\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  //удаление лайка\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  //удаление карточек\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n}\n//создание экземпляра класса Api\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"4794d416-5184-43be-8376-438ba82ab5d1\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;\nexport const BASE_URL = \"https://auth.nomoreparties.co/\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_authorization","authorization","_getResponseData","res","ok","Promise","reject","status","json","getInitialCards","fetch","then","getInfo","setUserInfo","data","method","body","JSON","stringify","name","about","description","setAvatar","avatar","addCard","mesto","link","addLike","cardId","deleteLike","deleteCard","api","BASE_URL","register","password","email","response","e","catch","err","console","log"],"sources":["C:/Users/User/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n    this._headers = options.headers;\r\n    this._authorization = options.headers.authorization;\r\n  }\r\n//Проверка ответа сервера и преобразование из json\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`); \r\n    }\r\n    return res.json();\r\n}\r\n//загрузка карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: {\r\n        authorization: this._authorization,\r\n      }\r\n   })\r\n   .then(this._getResponseData)\r\n  }\r\n//загрузкам информации о пользователе с сервера\r\n  getInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//сохранение отредактированного профиля на сервере\r\n  setUserInfo(data) { \r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.description,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//обновление аватара\r\n  setAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//добавление новой карточки\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.mesto,\r\n        link: data.link,\r\n      })\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n//постановка лайка\r\n  addLike(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      } \r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n  //удаление лайка\r\n  deleteLike(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      } \r\n    })\r\n    .then(this._getResponseData) \r\n  }\r\n//удаление карточек\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    })\r\n    .then(this._getResponseData)\r\n  }\r\n\r\n}\r\n//создание экземпляра класса Api\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\r\n  headers: {\r\n    authorization: \"4794d416-5184-43be-8376-438ba82ab5d1\",\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\nexport default api;\r\n\r\nexport const BASE_URL = \"https://auth.nomoreparties.co/\";\r\n\r\nexport const register = ( password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((response) => {\r\n    try {\r\n      if (response.status === 200){\r\n        return response.json();\r\n      }\r\n    } catch(e){\r\n      return (e)\r\n    }\r\n  })\r\n  .then((res) => {\r\n    return res;\r\n  })\r\n  .catch((err) => console.log(err));\r\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}