{"ast":null,"code":"const baseUrl = 'https://auth.nomoreparties.co';\nconst getResponseData = res => {\n  if (res.ok) return res.json();\n  return Promise.reject(`Ошибка ${res.status}`);\n};\nconst register = (email, password) => {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res));\n};\nconst authorize = (email, password) => {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => _checkResponse(res)).then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};\nconst getToken = token => {\n  return fetch(`${baseUrl}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => _checkResponse(res));\n};\nexport const auth = {\n  register,\n  authorize,\n  getToken\n};\n\n// const baseUrl = \"https://auth.nomoreparties.co\"\n\n// function getResponseData(res) {\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\n// }\n\n// export function registration(password, email) {\n//   return fetch(`${baseUrl}/signup`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   })\n//   .then(res => getResponseData(res))\n// }\n\n// export function authorization(password, email) {\n//   return fetch(`${baseUrl}/signin`, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   })\n//   .then(res => getResponseData(res))\n//   .then((data) => {\n//     if (data.token) {\n//       localStorage.setItem('jwt', data.token);\n//       return data;\n//     }\n//   })\n// }\n\n// export function getUsetData(token) {\n//   return fetch(`${baseUrl}/user/me`, {\n//   method: 'GET',\n//   headers: {\n//     'Content-Type': 'application/json',\n//     Authorization: `Bearer ${token}`,\n//   }\n//   })\n//   .then(res => getResponseData(res))\n// }","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","_checkResponse","data","token","localStorage","setItem","getToken","Authorization","auth"],"sources":["C:/Users/User/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const baseUrl ='https://auth.nomoreparties.co'\r\n\r\nconst getResponseData = (res) => {\r\n  if (res.ok) return res.json();\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n\r\nconst register = (email, password) => {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n    .then((res) => getResponseData(res))\r\n};\r\n\r\nconst authorize = (email, password) => {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((res) => _checkResponse(res))\r\n    .then((data) => {\r\n      if (data.token){\r\n        localStorage.setItem('jwt', data.token);\r\n        return data;\r\n      }\r\n    });\r\n};\r\n\r\nconst getToken = (token) => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => _checkResponse(res))\r\n};\r\n\r\nexport const auth = {\r\n  register,\r\n  authorize,\r\n  getToken,\r\n};\r\n\r\n\r\n// const baseUrl = \"https://auth.nomoreparties.co\"\r\n\r\n// function getResponseData(res) {\r\n//   return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n// }\r\n\r\n// export function registration(password, email) {\r\n//   return fetch(`${baseUrl}/signup`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ email, password }),\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }\r\n\r\n// export function authorization(password, email) {\r\n//   return fetch(`${baseUrl}/signin`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ email, password }),\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n//   .then((data) => {\r\n//     if (data.token) {\r\n//       localStorage.setItem('jwt', data.token);\r\n//       return data;\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function getUsetData(token) {\r\n//   return fetch(`${baseUrl}/user/me`, {\r\n//   method: 'GET',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     Authorization: `Bearer ${token}`,\r\n//   }\r\n//   })\r\n//   .then(res => getResponseData(res))\r\n// }"],"mappings":"AAAA,MAAMA,OAAO,GAAE,+BAA+B;AAE9C,MAAMC,eAAe,GAAIC,GAAG,IAAK;EAC/B,IAAIA,GAAG,CAACC,EAAE,EAAE,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAC/C,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACpC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACCO,IAAI,CAAEf,GAAG,IAAKD,eAAe,CAACC,GAAG,CAAC,CAAC;AACxC,CAAC;AAED,MAAMgB,SAAS,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EACrC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCO,IAAI,CAAEf,GAAG,IAAKiB,cAAc,CAACjB,GAAG,CAAC,CAAC,CAClCe,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAC;MACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,KAAK,CAAC;MACvC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACN,CAAC;AAED,MAAMI,QAAQ,GAAIH,KAAK,IAAK;EAC1B,OAAOV,KAAK,CAAE,GAAEX,OAAQ,WAAU,EAAE;IAClCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCY,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CACCJ,IAAI,CAAEf,GAAG,IAAKiB,cAAc,CAACjB,GAAG,CAAC,CAAC;AACvC,CAAC;AAED,OAAO,MAAMwB,IAAI,GAAG;EAClBlB,QAAQ;EACRU,SAAS;EACTM;AACF,CAAC;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}