{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function formValidation() {\n  _s();\n  const [value, setValue] = useState({});\n  const [error, setError] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [disInputVali, setIsInputValid] = useState({});\n  console.log(isInputValid);\n  function handleChange(event) {\n    //console.log(event.target.form)\n    const name = event.target.name;\n    const value = event.target.value;\n    const validationMessage = event.target.validationMessage;\n    const valid = event.target.validity.valid;\n    const form = event.target.form;\n    setValue(oldValue => {\n      return {\n        ...oldValue,\n        [name]: value\n      };\n    });\n    setError(oldError => {\n      return {\n        ...oldError,\n        [name]: validationMessage\n      };\n    });\n    setIsInputValid(oldIsValid => {\n      return {\n        ...oldIsValid,\n        [name]: valid\n      };\n    });\n  }\n  return {\n    handleChange\n  };\n}\n_s(formValidation, \"u5Hcqfwlzcf2nH0msn11qmiwt1Y=\");","map":{"version":3,"names":["useState","formValidation","_s","value","setValue","error","setError","isValid","setIsValid","disInputVali","setIsInputValid","console","log","isInputValid","handleChange","event","name","target","validationMessage","valid","validity","form","oldValue","oldError","oldIsValid"],"sources":["C:/Users/User/Desktop/dev/mesto-react/src/utils/formValidation.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function formValidation() {\r\n  const [value, setValue] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [disInputVali, setIsInputValid] = useState({})\r\n  console.log(isInputValid)\r\n\r\n  function handleChange(event) {\r\n    //console.log(event.target.form)\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    const validationMessage = event.target.validationMessage\r\n    const valid = event.target.validity.valid\r\n    const form = event.target.form\r\n\r\n    setValue((oldValue) => {\r\n      return { ...oldValue, [name] : value }\r\n    })\r\n\r\n    setError((oldError) => {\r\n      return { ...oldError, [name] : validationMessage }\r\n    })\r\n\r\n    setIsInputValid((oldIsValid) => {\r\n      return { ...oldIsValid, [name] : valid }\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  return { handleChange }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpDW,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EAEzB,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3B;IACA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAMb,KAAK,GAAGY,KAAK,CAACE,MAAM,CAACd,KAAK;IAChC,MAAMe,iBAAiB,GAAGH,KAAK,CAACE,MAAM,CAACC,iBAAiB;IACxD,MAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAM,CAACG,QAAQ,CAACD,KAAK;IACzC,MAAME,IAAI,GAAGN,KAAK,CAACE,MAAM,CAACI,IAAI;IAE9BjB,QAAQ,CAAEkB,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACN,IAAI,GAAIb;MAAM,CAAC;IACxC,CAAC,CAAC;IAEFG,QAAQ,CAAEiB,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACP,IAAI,GAAIE;MAAkB,CAAC;IACpD,CAAC,CAAC;IAEFR,eAAe,CAAEc,UAAU,IAAK;MAC9B,OAAO;QAAE,GAAGA,UAAU;QAAE,CAACR,IAAI,GAAIG;MAAM,CAAC;IAC1C,CAAC,CAAC;EAGJ;EAEA,OAAO;IAAEL;EAAa,CAAC;AAEzB;AAACZ,EAAA,CAhCuBD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}